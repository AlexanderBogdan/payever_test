// Generated by CoffeeScript 1.10.0
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  App.module('Gallery.Albums', function(Albums, App, Backbone, Marionette, $, _) {
    Albums.Views = {};
    Albums.Views.AlbumItemView = (function(superClass) {
      extend(AlbumItemView, superClass);

      function AlbumItemView() {
        return AlbumItemView.__super__.constructor.apply(this, arguments);
      }

      AlbumItemView.prototype.className = 'col-sm-5ths';

      AlbumItemView.prototype.events = {
        'click a': 'handleRouting'
      };

      AlbumItemView.prototype.template = '#album-item-view-template';

      AlbumItemView.prototype.handleRouting = function(e) {
        var id;
        e.preventDefault();
        id = $(e.target).data('album-id');
        Backbone.history.navigate('albums/' + id, true);
      };

      return AlbumItemView;

    })(Marionette.ItemView);
    Albums.Views.AlbumDetailItemView = (function(superClass) {
      extend(AlbumDetailItemView, superClass);

      function AlbumDetailItemView() {
        return AlbumDetailItemView.__super__.constructor.apply(this, arguments);
      }

      AlbumDetailItemView.prototype.template = '#album-item-detail-view-template';

      AlbumDetailItemView.prototype.modelEvents = {
        'sync': 'render'
      };

      return AlbumDetailItemView;

    })(Marionette.ItemView);
    Albums.Views.AlbumCollectionView = (function(superClass) {
      extend(AlbumCollectionView, superClass);

      function AlbumCollectionView() {
        return AlbumCollectionView.__super__.constructor.apply(this, arguments);
      }

      AlbumCollectionView.prototype.className = 'row';

      AlbumCollectionView.prototype.childView = Albums.Views.AlbumItemView;

      AlbumCollectionView.prototype.collectionEvents = {
        'sync': 'render'
      };

      return AlbumCollectionView;

    })(Marionette.CollectionView);
    Albums.Views.AlbumDetailLayoutView = (function(superClass) {
      extend(AlbumDetailLayoutView, superClass);

      function AlbumDetailLayoutView() {
        return AlbumDetailLayoutView.__super__.constructor.apply(this, arguments);
      }

      AlbumDetailLayoutView.prototype.template = '#album-detail-layout-view-template';

      AlbumDetailLayoutView.prototype.childEvents = {
        'generate:pager': 'onGeneratePager'
      };

      AlbumDetailLayoutView.prototype.regions = {
        'albumDetail': '#album-detail',
        'albumImages': '#album-images',
        'albumPager': '#album-pager'
      };

      AlbumDetailLayoutView.prototype.onGeneratePager = function(childView, pager) {
        var pagerView;
        pagerView = Marionette.ItemView.extend({
          events: {
            'click a': 'handlePageRouting'
          },
          tagName: 'ul',
          className: 'pagination',
          template: function() {
            var ul;
            ul = $('<ul></ul>');
            if (pager.firstPageInRange > pager.first) {
              ul.append('<li><a href="#" data-page="' + pager.first + '">&laquo; First</a></li>');
              ul.append('<li><a href="#" data-page="' + pager.previous + '">&lsaquo; Prev</a></li>');
              ul.append('<li class="disabled"><span>...</span></li>');
            }
            pager.pagesInRange.map(function(item) {
              var li, link;
              li = $('<li></li>');
              link = $('<a href="#" data-page="' + item + '">' + item + '</a>');
              if (item === pager.current) {
                li.addClass('active');
                link = $('<span>' + item + '</span>');
              }
              li.html(link);
              ul.append(li);
            });
            if (pager.lastPageInRange < pager.last) {
              ul.append('<li class="disabled"><span>...</span></li>');
              ul.append('<li><a href="#" data-page="' + pager.next + '">Next &rsaquo;</a></li>');
              ul.append('<li><a href="#" data-page="' + pager.last + '">Last &raquo;</a></li>');
            }
            return $(ul).html();
          },
          handlePageRouting: function(e) {
            var pageNum, path;
            e.preventDefault();
            path = Backbone.history.getFragment().split('/').slice(0, 2);
            pageNum = $(e.target).data('page');
            path.push('page');
            path.push(pageNum);
            Backbone.history.navigate(path.join('/'), true);
          }
        });
        this.albumPager.show(new pagerView);
      };

      return AlbumDetailLayoutView;

    })(Marionette.LayoutView);
  });

}).call(this);
